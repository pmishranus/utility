TRIGGER "CHRS_APPROVER_MATRIX_DELETE_TRIGGER"
AFTER DELETE ON "NUSEXT_UTILITY_CHRS_APPROVER_MATRIX"
REFERENCING OLD ROW OLD_ROW
FOR EACH ROW
BEGIN
	DECLARE audit_id INTEGER;
	DECLARE old_value_ref VARCHAR(100);
	DECLARE user_grp_alias VARCHAR(50);
	DECLARE process_code_desc VARCHAR(100);
	DECLARE ulu_desc VARCHAR(100);
	DECLARE fdlu_desc VARCHAR(100);

	ulu_desc := '';
	fdlu_desc := '';

	-- Data Log for Deleted Approver Matrix Entry
	IF :OLD_ROW.AUTH_ID IS NOT NULL
		AND :OLD_ROW.AUTH_ID <> ''
		AND :OLD_ROW.PROCESS_CODE IS NOT NULL
		AND :OLD_ROW.PROCESS_CODE <> '' THEN

		SELECT TOP 1 FULL_NM INTO old_value_ref 
		FROM "NUSEXT_MASTER_DATA_CHRS_JOB_INFO" 
		WHERE STF_NUMBER = :OLD_ROW.STAFF_ID;

		SELECT TOP 1 ROLE_CODE_LBL INTO user_grp_alias 
		FROM "NUSEXT_UTILITY_CHRS_ROLE_MASTER" 
		WHERE ROLE_CODE = :OLD_ROW.STAFF_USER_GRP;

		SELECT TOP 1 PROCESS_TITLE INTO process_code_desc 
		FROM "NUSEXT_UTILITY_PROCESS_CONFIG" 
		WHERE PROCESS_CODE = :OLD_ROW.PROCESS_CODE;

		IF :OLD_ROW.ULU <> 'ALL' THEN
			SELECT TOP 1 ULU_T INTO ulu_desc 
			FROM "NUSEXT_MASTER_DATA_CHRS_FDLU_ULU" 
			WHERE ULU_C = :OLD_ROW.ULU;
		END IF;

		IF :OLD_ROW.FDLU <> 'ALL' THEN
			SELECT TOP 1 FDLU_T INTO fdlu_desc 
			FROM "NUSEXT_MASTER_DATA_CHRS_FDLU_ULU" 
			WHERE FDLU_C = :OLD_ROW.FDLU;
		END IF;

		user_grp_alias := 'Delete Assignment-' || :user_grp_alias;

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :OLD_ROW.AUTH_ID, CURRENT_TIMESTAMP, :OLD_ROW.UPDATED_BY, 'Approver Matrix Details', :OLD_ROW.PROCESS_CODE, :process_code_desc, :user_grp_alias, :OLD_ROW.ULU, :ulu_desc, :OLD_ROW.FDLU, :fdlu_desc, 'Object', 'DELETED', :OLD_ROW.STAFF_ID, :old_value_ref);

	END IF;

END;
