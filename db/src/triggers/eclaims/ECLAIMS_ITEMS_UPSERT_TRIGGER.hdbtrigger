TRIGGER "ECLAIMS_ITEMS_UPSERT_TRIGGER"
AFTER UPDATE ON "NUSEXT_ECLAIMS_ITEMS_DATA"
REFERENCING OLD ROW OLD_ROW, NEW ROW NEW_ROW
FOR EACH ROW
BEGIN
	DECLARE audit_id INTEGER;
	DECLARE reference_id VARCHAR(20);
	DECLARE request_id VARCHAR(20);
	DECLARE claim_req_type VARCHAR(20);
	DECLARE item_ref VARCHAR(50);
	DECLARE identity_ref VARCHAR(50);
	DECLARE custom_attr1 VARCHAR(50);
	DECLARE custom_attr2 VARCHAR(50);

	-- Get Draft ID, Request ID and Claim Request Type from Header Data
	SELECT TOP 1 
		DRAFT_ID,
		REQUEST_ID,
		CLAIM_REQUEST_TYPE
	INTO 
		reference_id,
		request_id,
		claim_req_type
	FROM "NUSEXT_ECLAIMS_HEADER_DATA"
	WHERE DRAFT_ID = :NEW_ROW.DRAFT_ID;

	-- Maintain Item Data Logs for Submitted Requests only
	IF :reference_id IS NOT NULL
		AND :reference_id <> ''
		AND :request_id IS NOT NULL
		AND :request_id <> '' THEN

		-- Prepare the Item Reference by Claim Start Date and Unique Item Id
		-- item_ref := concat(:OLD_ROW.CLAIM_START_DATE,' : Ref#');
		-- item_ref := concat(:item_ref,SUBSTRING(:NEW_ROW.ITEM_ID, length(:NEW_ROW.ITEM_ID)-2,3));
		item_ref := CONCAT('Ref# ', SUBSTRING(:NEW_ROW.ITEM_ID, LENGTH(:NEW_ROW.ITEM_ID) - 2, 3));

		custom_attr1 := :NEW_ROW.CLAIM_START_DATE;
		custom_attr2 := '';
		identity_ref := :custom_attr1;

		-- Maintain Attributes for Claim Request Type Period
		IF :claim_req_type IS NOT NULL
			AND :claim_req_type <> ''
			AND UPPER(:claim_req_type) = 'PERIOD' THEN

			-- Prepare the Item Reference by Claim Start and End Date and Unique Item Id
			-- item_ref := concat(:NEW_ROW.CLAIM_START_DATE,' to ');
			-- item_ref := concat(:item_ref,:NEW_ROW.CLAIM_END_DATE);
			-- item_ref := concat(:item_ref,' : Ref#');
			-- item_ref := concat(:item_ref,SUBSTRING(:NEW_ROW.ITEM_ID, length(:NEW_ROW.ITEM_ID)-2,3));

			custom_attr2 := :NEW_ROW.CLAIM_END_DATE;
			identity_ref := CONCAT(:identity_ref, ' to ');
			identity_ref := CONCAT(:identity_ref, :custom_attr2);

		END IF;

		-- Log when Item is Flagged as Deleted
		IF :NEW_ROW.IS_DELETED = 'Y' AND :OLD_ROW.IS_DELETED = 'N' THEN

			INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
			VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Delete Flagged', :OLD_ROW.IS_DELETED, '', :NEW_ROW.IS_DELETED, '', 'Object', 'DELETED', :custom_attr1, :custom_attr2);

		END IF;

		-- Log Items Details when an item is modified - Unique ITEM ID
		IF :NEW_ROW.ITEM_ID = :OLD_ROW.ITEM_ID THEN

			-- Log when Start Time is changed
			IF :NEW_ROW.START_TIME <> :OLD_ROW.START_TIME THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Start Time', :OLD_ROW.START_TIME, '', :NEW_ROW.START_TIME, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log when End Time is changed
			IF :NEW_ROW.END_TIME <> :OLD_ROW.END_TIME THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'End Time', :OLD_ROW.END_TIME, '', :NEW_ROW.END_TIME, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log for Hours
			IF :NEW_ROW.HOURS <> :OLD_ROW.HOURS THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Hours', :OLD_ROW.HOURS, '', :NEW_ROW.HOURS, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log for Hours Computed
			IF :NEW_ROW.HOURS_COMPUTED <> :OLD_ROW.HOURS_COMPUTED THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Hours Computed', :OLD_ROW.HOURS_COMPUTED, '', :NEW_ROW.HOURS_COMPUTED, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log for WBS
			IF :NEW_ROW.WBS <> :OLD_ROW.WBS THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'WBS', :OLD_ROW.WBS, '', :NEW_ROW.WBS, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log for Rate Type
			IF :NEW_ROW.RATE_TYPE <> :OLD_ROW.RATE_TYPE THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Rate Type', :OLD_ROW.RATE_TYPE, '', :NEW_ROW.RATE_TYPE, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log for Rate Type Amount
			IF :NEW_ROW.RATE_TYPE_AMOUNT <> :OLD_ROW.RATE_TYPE_AMOUNT THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Rate Amount', :OLD_ROW.RATE_TYPE_AMOUNT, '', :NEW_ROW.RATE_TYPE_AMOUNT, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log for Total Amount
			IF :NEW_ROW.TOTAL_AMOUNT <> :OLD_ROW.TOTAL_AMOUNT THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Total Amount', :OLD_ROW.TOTAL_AMOUNT, '', :NEW_ROW.TOTAL_AMOUNT, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log for Rate Unit
			IF :NEW_ROW.RATE_UNIT <> :OLD_ROW.RATE_UNIT THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Rate Unit', :OLD_ROW.RATE_UNIT, '', :NEW_ROW.RATE_UNIT, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log for Hours Unit
			IF :NEW_ROW.HOURS_UNIT <> :OLD_ROW.HOURS_UNIT THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Hours/Unit', :OLD_ROW.HOURS_UNIT, '', :NEW_ROW.HOURS_UNIT, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

			-- Log for Remarks
			IF :NEW_ROW.REMARKS <> :OLD_ROW.REMARKS THEN

				INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
				VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DRAFT_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'EClaims Items', :identity_ref, :item_ref, 'Remarks', :OLD_ROW.REMARKS, '', :NEW_ROW.REMARKS, '', 'String', 'MODIFIED', :custom_attr1, :custom_attr2);

			END IF;

		END IF;

	END IF;
END;
