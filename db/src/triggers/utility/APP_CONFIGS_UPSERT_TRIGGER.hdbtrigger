TRIGGER "APP_CONFIGS_UPSERT_TRIGGER"
AFTER UPDATE ON "NUSEXT_UTILITY_APP_CONFIGS"
REFERENCING OLD ROW OLD_ROW, NEW ROW NEW_ROW
FOR EACH ROW
BEGIN
	DECLARE audit_id INTEGER;

	-- Log for CONFIG_VALUE is changed
	IF :NEW_ROW.CONFIG_VALUE <> :OLD_ROW.CONFIG_VALUE THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.ACFG_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'App Config Audit Details', :NEW_ROW.PROCESS_CODE, '', 'Config Value', :OLD_ROW.CONFIG_VALUE, :OLD_ROW.CONFIG_KEY, :NEW_ROW.CONFIG_VALUE, :NEW_ROW.CONFIG_KEY, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for CONFIG_DESC is changed
	IF :NEW_ROW.CONFIG_DESC <> :OLD_ROW.CONFIG_DESC THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.ACFG_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'App Config Audit Details', :NEW_ROW.PROCESS_CODE, '', 'Config Desc', :OLD_ROW.CONFIG_DESC, :OLD_ROW.CONFIG_KEY, :NEW_ROW.CONFIG_DESC, :NEW_ROW.CONFIG_KEY, 'String', 'MODIFIED', '', '');

	END IF;

END;
