TRIGGER "CHRS_APPROVER_MATRIX_UPSERT_TRIGGER"
AFTER UPDATE ON "NUSEXT_UTILITY_CHRS_APPROVER_MATRIX"
REFERENCING OLD ROW OLD_ROW, NEW ROW NEW_ROW
FOR EACH ROW
BEGIN
	DECLARE audit_id INTEGER;
	DECLARE user_grp_alias VARCHAR(50);
	DECLARE new_value_ref VARCHAR(100) DEFAULT '';
	DECLARE process_code_desc VARCHAR(100);

	-- Log for Validity To is changed
	IF :NEW_ROW.VALID_TO <> :OLD_ROW.VALID_TO THEN

		BEGIN
			DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN END;
			SELECT TOP 1 FULL_NM INTO new_value_ref 
			FROM "NUSEXT_MASTER_DATA_CHRS_JOB_INFO" 
			WHERE STF_NUMBER = :NEW_ROW.STAFF_ID;
		END;

		SELECT TOP 1 ROLE_CODE_LBL INTO user_grp_alias 
		FROM "NUSEXT_UTILITY_CHRS_ROLE_MASTER" 
		WHERE ROLE_CODE = :NEW_ROW.STAFF_USER_GRP;

		SELECT TOP 1 PROCESS_TITLE INTO process_code_desc 
		FROM "NUSEXT_UTILITY_PROCESS_CONFIG" 
		WHERE PROCESS_CODE = :NEW_ROW.PROCESS_CODE;

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.AUTH_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'Approver Matrix Details', :NEW_ROW.PROCESS_CODE, :process_code_desc, 'Validity To', :OLD_ROW.VALID_TO, :user_grp_alias, :NEW_ROW.VALID_TO, :user_grp_alias, 'Date', 'MODIFIED', :NEW_ROW.STAFF_ID, :new_value_ref);

	END IF;

END;
