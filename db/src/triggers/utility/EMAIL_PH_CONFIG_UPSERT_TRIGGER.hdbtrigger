TRIGGER "EMAIL_PH_CONFIG_UPSERT_TRIGGER"
AFTER UPDATE ON "NUSEXT_UTILITY_EMAIL_PLACEHOLDER_CONFIG"
REFERENCING OLD ROW OLD_ROW, NEW ROW NEW_ROW
FOR EACH ROW
BEGIN
	DECLARE audit_id INTEGER;

	-- Log for Email Desc change
	IF :NEW_ROW.PH_TYPE <> :OLD_ROW.PH_TYPE THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.EPH_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'Email PH Config Details', '', '', 'PH Type', :OLD_ROW.PH_TYPE, :OLD_ROW.TEMPLATE_NAME, :NEW_ROW.PH_TYPE, :NEW_ROW.TEMPLATE_NAME, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for Field Type Change
	IF :NEW_ROW.FIELD_TYPE <> :OLD_ROW.FIELD_TYPE THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.EPH_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'Email PH Config Details', '', '', 'Field Type', :OLD_ROW.FIELD_TYPE, :OLD_ROW.TEMPLATE_NAME, :NEW_ROW.FIELD_TYPE, :NEW_ROW.TEMPLATE_NAME, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for Field Key Change
	IF :NEW_ROW.FIELD_KEY <> :OLD_ROW.FIELD_KEY THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.EPH_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'Email PH Config Details', '', '', 'Field Key', :OLD_ROW.FIELD_KEY, :OLD_ROW.TEMPLATE_NAME, :NEW_ROW.FIELD_KEY, :NEW_ROW.TEMPLATE_NAME, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for Field Value Change
	IF :NEW_ROW.FIELD_VALUE <> :OLD_ROW.FIELD_VALUE THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.EPH_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'Email PH Config Details', '', '', 'Field Value', :OLD_ROW.FIELD_VALUE, :OLD_ROW.TEMPLATE_NAME, :NEW_ROW.FIELD_VALUE, :NEW_ROW.TEMPLATE_NAME, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for Field Value Prop Change
	IF :NEW_ROW.FIELD_VALUE_PROP <> :OLD_ROW.FIELD_VALUE_PROP THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.EPH_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'Email PH Config Details', '', '', 'Field Value Prop', :OLD_ROW.FIELD_VALUE_PROP, :OLD_ROW.TEMPLATE_NAME, :NEW_ROW.FIELD_VALUE_PROP, :NEW_ROW.TEMPLATE_NAME, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for Display Seq Change
	IF :NEW_ROW.DISPLAY_SEQ <> :OLD_ROW.DISPLAY_SEQ THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.EPH_ID, CURRENT_TIMESTAMP, :NEW_ROW.UPDATED_BY, 'Email PH Config Details', '', '', 'Display Sequence', :OLD_ROW.DISPLAY_SEQ, :OLD_ROW.TEMPLATE_NAME, :NEW_ROW.DISPLAY_SEQ, :NEW_ROW.TEMPLATE_NAME, 'String', 'MODIFIED', '', '');

	END IF;

END;
