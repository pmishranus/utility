TRIGGER "DASHBOARD_CONFIG_UPSERT_TRIGGER"
AFTER UPDATE ON "NUSEXT_UTILITY_DASHBOARD_CONFIG"
REFERENCING OLD ROW OLD_ROW, NEW ROW NEW_ROW
FOR EACH ROW
BEGIN
	DECLARE audit_id INTEGER;

	-- Log for Config Value change
	IF :NEW_ROW.CONFIG_VALUE <> :OLD_ROW.CONFIG_VALUE THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DS_ACFG_ID, CURRENT_TIMESTAMP, :NEW_ROW.MODIFIED_BY, 'Dashboard Config Details', '', '', 'Config Value', :OLD_ROW.CONFIG_VALUE, :OLD_ROW.REFERENCE_KEY, :NEW_ROW.CONFIG_VALUE, :NEW_ROW.REFERENCE_KEY, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for Field Type Change
	IF :NEW_ROW.FIELD_TYPE <> :OLD_ROW.FIELD_TYPE THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DS_ACFG_ID, CURRENT_TIMESTAMP, :NEW_ROW.MODIFIED_BY, 'Dashboard Config Details', '', '', 'Field Type', :OLD_ROW.FIELD_TYPE, :OLD_ROW.REFERENCE_KEY, :NEW_ROW.FIELD_TYPE, :NEW_ROW.REFERENCE_KEY, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for Sequence Change
	IF :NEW_ROW.SEQUENCE <> :OLD_ROW.SEQUENCE THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DS_ACFG_ID, CURRENT_TIMESTAMP, :NEW_ROW.MODIFIED_BY, 'Dashboard Config Details', '', '', 'Sequence', :OLD_ROW.SEQUENCE, :OLD_ROW.REFERENCE_KEY, :NEW_ROW.SEQUENCE, :NEW_ROW.REFERENCE_KEY, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for Config Data Change
	IF :NEW_ROW.CONFIG_DATA <> :OLD_ROW.CONFIG_DATA THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DS_ACFG_ID, CURRENT_TIMESTAMP, :NEW_ROW.MODIFIED_BY, 'Dashboard Config Details', '', '', 'Config Data', :OLD_ROW.CONFIG_DATA, :OLD_ROW.REFERENCE_KEY, :NEW_ROW.CONFIG_DATA, :NEW_ROW.REFERENCE_KEY, 'String', 'MODIFIED', '', '');

	END IF;

	-- Log for Field Value Prop Change
	IF :NEW_ROW.IS_ACTIVE <> :OLD_ROW.IS_ACTIVE THEN

		INSERT INTO "NUSEXT_UTILITY_AUDIT_LOG_DATA"("AUDIT_ID", "REFERENCE_ID", "CHANGED_ON", "CHANGED_BY", "SECTION", "IDENTITY", "SUB_SECTION", "FIELD_LABEL", "OLD_VALUE", "OLD_VALUE_DESC", "NEW_VALUE", "NEW_VALUE_DESC", "FIELD_TYPE", "ACTION_TYPE", "CUSTOM_ATTR_1", "CUSTOM_ATTR_2")
		VALUES("NUSEXT_SEQ_AUDIT_LOG_DATA".NEXTVAL, :NEW_ROW.DS_ACFG_ID, CURRENT_TIMESTAMP, :NEW_ROW.MODIFIED_BY, 'Dashboard Config Details', '', '', 'Active', :OLD_ROW.IS_ACTIVE, :OLD_ROW.REFERENCE_KEY, :NEW_ROW.IS_ACTIVE, :NEW_ROW.REFERENCE_KEY, 'String', 'MODIFIED', '', '');

	END IF;

END;
